package ${context.parentPackage}.${param.controllerPackageName};


import ${context.parentPackage}.config.JSON;
import ${context.parentPackage}.config.Consts;
import ${context.parentPackage}.entity.Page;
import ${context.parentPackage}.${param.voPackageName}.${context.javaBeanName}${param.voClassSuffix};
import ${context.parentPackage}.${param.servicePackageName}.${context.javaBeanName}${param.serviceSuffix};
import ${context.parentPackage}.event.Event;
import ${context.parentPackage}.event.EventCenter;
import io.swagger.annotations.*;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import javax.annotation.PostConstruct;
import java.util.function.Consumer;



@Api(tags = "$!{table.comment}")
@Slf4j
@RestController
@RequestMapping("/${context.javaBeanName.toLowerCase()}")
public class ${context.javaBeanName}${param.controllerSuffix} {


    @Autowired
    private ${context.javaBeanName}${param.serviceSuffix} entity;

    @Autowired
    private EventCenter eventCenter;

    @PostConstruct
    private void init(){
       eventCenter.onEvent("${context.javaBeanName}-Deleted", new Consumer<Event>() {
           @Override
           public void accept(Event event) {
               log.info("记录已经删除，主键：{}", event.getValue());
           }
       });
    }


    /**
     * 获取指定ID的对象
     * @param id 数据库主键
     * @return 返回指定ID的对象，不存在返回null
     */
    @ApiOperation(value = "查询", notes = "根据主键查询单条记录")
    @GetMapping(value = "/get")
    public JSON<${context.javaBeanName}${param.voClassSuffix}> getById(${pk.javaTypeBox} id){
        log.debug("====> $!{table.comment}(${context.javaBeanName})根据主键查询，参数：{}",id);
        ${context.javaBeanName}${param.voClassSuffix} vo = entity.get(id);
        return JSON.JSON_OK(vo);
    }



    /**
     * 新增记录
     * @param model 需要新增对象及属性值
     * @return 返回处理结果
     */
    @ApiOperation(value = "新增", notes = "新增记录")
    @PostMapping(value = "/add")
    public JSON<String> add(${context.javaBeanName}${param.voClassSuffix} model){
        log.debug("====> $!{table.comment}(${context.javaBeanName})新增记录");
        Object id = entity.add(model);
        return JSON.JSON_OK("已完成新增条目，主键：" + id);
    }



    /**
     * 根据ID删除记录
     * @param id 需要删除记录的主键
     * @return 返回处理结果
     */
    @ApiOperation(value = "删除", notes = "删除指定主键的记录")
    @PostMapping(value = "/delete")
    public JSON<String> delete(${pk.javaTypeBox} id) {
        log.debug("====> $!{table.comment}(${context.javaBeanName})删除记录，参数：{}",id);
        entity.delete(id);
        eventCenter.publish(new Event("${context.javaBeanName}-Deleted","删除事件",id,this));
        return JSON.JSON_OK("记录已删除");
    }



    /**
     * 根据ID更新记录数据
     * @param model 需要更新对象及属性值
     * @return 返回处理结果
     */
    @ApiOperation(value = "更新", notes = "根据主键更新数据记录")
    @PostMapping(value = "/update")
    public JSON<String> update(${context.javaBeanName}${param.voClassSuffix} model){
        log.debug("====> $!{table.comment}(${context.javaBeanName})更新记录");
        entity.update(model);
        return JSON.JSON_OK("记录已完成更新");
    }



    /**
     * 查询指定页码的数据
     * @param pageIndex 当前页码
     * @param pageSize 每页显示记录数
     * @return 返回指定页数据
     */
    @ApiOperation(value = "分页查询", notes = "查询指定页码的数据")
    @GetMapping(value = "/list")
    public JSON<Page<${context.javaBeanName}${param.voClassSuffix}>> listPage(Integer pageIndex, Integer pageSize) {
        log.debug("====> $!{table.comment}(${context.javaBeanName})分页查询，参数：{},{}",pageIndex,pageSize);
        if ((pageIndex == null) || (pageIndex < 1)) {
            pageIndex = 1;
        }
        if ((pageSize == null) || (pageSize < 1)) {
            pageSize = Consts.PAGE_SIZE;
        }
        return JSON.JSON_OK(entity.listPage(pageIndex,pageSize));
    }




}