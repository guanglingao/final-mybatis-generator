package ${context.parentPackage}.${param.voPackageName};

#if(${param.serializable}=="true")
import java.io.Serializable;
#end
#if(${table.hasDateField})
import java.time.LocalDate;
import com.fasterxml.jackson.datatype.jsr310.deser.LocalDateDeserializer;
import com.fasterxml.jackson.datatype.jsr310.ser.LocalDateSerializer;
#end
#if(${table.hasDateTimeField})
import java.time.LocalDateTime;
import com.fasterxml.jackson.datatype.jsr310.deser.LocalDateTimeDeserializer;
import com.fasterxml.jackson.datatype.jsr310.ser.LocalDateTimeSerializer;
#end
#if(${table.hasTimeField})
import java.time.LocalTime;
import com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer;
import com.fasterxml.jackson.datatype.jsr310.ser.LocalTimeSerializer;
#end
#if(${table.hasDateField} || ${table.hasDateTimeField} || ${table.hasTimeField} )
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
#end
#if(${table.hasBigDecimalField})
import java.math.BigDecimal;
#end
import lombok.Data;
import org.springframework.beans.BeanUtils;
import ${context.parentPackage}.${param.entityPackageName}.${context.javaBeanName}${param.entitySuffix};
import java.util.ArrayList;
import java.util.List;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;


#if("$!{table.comment}" != "" )
/**
 * ${table.name}
 */
#end
@SuppressWarnings("serial")
@ApiModel("${table.comment}")
@Data
public class ${context.javaBeanName}${param.voClassSuffix} implements Serializable {

#foreach($column in $columns)

        /** #if("$!{column.comment}" != "")${column.comment}ï¼›#end ${column.name} **/
        #if(${column.javaTypeBox} == "LocalDate")
        @JsonSerialize(using = LocalDateSerializer.class)
        @JsonDeserialize(using = LocalDateDeserializer.class)
        @JsonFormat(pattern = "yyyy-MM-dd")
        #end
        #if(${column.javaTypeBox} == "LocalDateTime")
        @JsonSerialize(using = LocalDateTimeSerializer.class)
        @JsonDeserialize(using = LocalDateTimeDeserializer.class)
        @JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss")
        #end
        #if(${column.javaTypeBox} == "LocalTime")
        @JsonSerialize(using = LocalTimeSerializer.class)
        @JsonDeserialize(using = LocalTimeDeserializer.class)
        @JsonFormat(pattern = "HH:mm:ss")
        #end
        @ApiModelProperty(value = "$!{column.comment}")
    	public ${column.javaTypeBox} ${column.javaFieldName};




#end

        public static ${context.javaBeanName}${param.voClassSuffix} fromPO(${context.javaBeanName}${param.entitySuffix} po){
            if(po == null){
                return null;
            }
            ${context.javaBeanName}${param.voClassSuffix} vo = new ${context.javaBeanName}${param.voClassSuffix}();
            BeanUtils.copyProperties(po, vo);
            return vo;
        }


        public static List<${context.javaBeanName}${param.voClassSuffix}> fromPO(List<${context.javaBeanName}${param.entitySuffix}> pos){
            if(pos==null || pos.size()==0){
                return null;
            }
            List<${context.javaBeanName}${param.voClassSuffix}> r = new ArrayList();
            for (${context.javaBeanName}${param.entitySuffix} po : pos){
                r.add(fromPO(po));
            }
            return r;
        }


        public ${context.javaBeanName}${param.entitySuffix} toPO(){
            ${context.javaBeanName}${param.entitySuffix} po = new ${context.javaBeanName}();
            BeanUtils.copyProperties(this, po);
            return po;
        }

        public static List<${context.javaBeanName}${param.entitySuffix}> toPO(List<${context.javaBeanName}${param.voClassSuffix}> vos) {
            if ((vos == null) || (vos.size() == 0)) {
                return null;
            }
            List<${context.javaBeanName}${param.entitySuffix}> r = new ArrayList();

            for (${context.javaBeanName}${param.voClassSuffix} vo : vos) {
                r.add(vo.toPO());
            }
            return r;
        }

}