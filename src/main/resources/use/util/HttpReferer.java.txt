package ${parentPackage}.util;

import org.springframework.stereotype.Component;

import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

@Component
public class HttpReferer {



    public String getCookie(String key, HttpServletRequest request) {
        Cookie[] cookies = request.getCookies();
        if(cookies==null) {
            return null;
        }
        for (Cookie cookie : cookies) {
            if(cookie.getName().equalsIgnoreCase(key)) {
                return cookie.getValue();
            }
        }
        return null;
    }

    public void setCookie(String key, String value, int minutes, HttpServletResponse response) {
        Cookie cookie = new Cookie(key,value);
        cookie.setMaxAge(minutes*60);
        cookie.setPath("/");
        response.addCookie(cookie);
    }

    public String getClientIp(HttpServletRequest request) {
        if(request==null){
            return null;
        }
        String ip = null;
        String ipAddresses = request.getHeader("X-Forwarded-For");
        if (ipAddresses == null || ipAddresses.length() == 0 || "unknown".equalsIgnoreCase(ipAddresses)) {
            ipAddresses = request.getHeader("Proxy-Client-IP");
        }
        if (ipAddresses == null || ipAddresses.length() == 0 || "unknown".equalsIgnoreCase(ipAddresses)) {
            ipAddresses = request.getHeader("WL-Proxy-Client-IP");
        }
        if (ipAddresses == null || ipAddresses.length() == 0 || "unknown".equalsIgnoreCase(ipAddresses)) {
            ipAddresses = request.getHeader("HTTP_CLIENT_IP");
        }
        if (ipAddresses == null || ipAddresses.length() == 0 || "unknown".equalsIgnoreCase(ipAddresses)) {
            ipAddresses = request.getHeader("X-Real-IP");
        }
        if (ipAddresses != null && ipAddresses.length() != 0) {
            ip = ipAddresses.split(",")[0];
        }
        if (ip == null || ip.length() == 0 || "unknown".equalsIgnoreCase(ipAddresses)) {
            ip = request.getRemoteAddr();
        }
        return ip;
    }

    public String getContextPath(HttpServletRequest request) {
        return request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+request.getContextPath();
    }
}
